// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.7
// source: api/app/v1/app.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TestSignRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Secret      string `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
	SignContent string `protobuf:"bytes,2,opt,name=signContent,proto3" json:"signContent,omitempty"`
}

func (x *TestSignRequest) Reset() {
	*x = TestSignRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestSignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestSignRequest) ProtoMessage() {}

func (x *TestSignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestSignRequest.ProtoReflect.Descriptor instead.
func (*TestSignRequest) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{0}
}

func (x *TestSignRequest) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

func (x *TestSignRequest) GetSignContent() string {
	if x != nil {
		return x.SignContent
	}
	return ""
}

type TestSignReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sign string `protobuf:"bytes,1,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *TestSignReply) Reset() {
	*x = TestSignReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestSignReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestSignReply) ProtoMessage() {}

func (x *TestSignReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestSignReply.ProtoReflect.Descriptor instead.
func (*TestSignReply) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{1}
}

func (x *TestSignReply) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

type EthAuthorizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendBody *EthAuthorizeRequest_SendBody `protobuf:"bytes,1,opt,name=send_body,json=sendBody,proto3" json:"send_body,omitempty"`
}

func (x *EthAuthorizeRequest) Reset() {
	*x = EthAuthorizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthAuthorizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthAuthorizeRequest) ProtoMessage() {}

func (x *EthAuthorizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthAuthorizeRequest.ProtoReflect.Descriptor instead.
func (*EthAuthorizeRequest) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{2}
}

func (x *EthAuthorizeRequest) GetSendBody() *EthAuthorizeRequest_SendBody {
	if x != nil {
		return x.SendBody
	}
	return nil
}

type EthAuthorizeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token  string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *EthAuthorizeReply) Reset() {
	*x = EthAuthorizeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthAuthorizeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthAuthorizeReply) ProtoMessage() {}

func (x *EthAuthorizeReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthAuthorizeReply.ProtoReflect.Descriptor instead.
func (*EthAuthorizeReply) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{3}
}

func (x *EthAuthorizeReply) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *EthAuthorizeReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UserInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UserInfoRequest) Reset() {
	*x = UserInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoRequest) ProtoMessage() {}

func (x *UserInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoRequest.ProtoReflect.Descriptor instead.
func (*UserInfoRequest) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{4}
}

type UserInfoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status                    string  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`                                          // 状态为字符串"ok"时接口正常，其他情况忽略，弹出显示该字段文案即可
	MyAddress                 string  `protobuf:"bytes,2,opt,name=myAddress,proto3" json:"myAddress,omitempty"`                                    // 当前用户的 游戏id，钱包地址
	Level                     uint64  `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`                                           // 级别，系统里所有我的级别展示
	Giw                       float64 `protobuf:"fixed64,4,opt,name=giw,proto3" json:"giw,omitempty"`                                              // git余额，系统里所有git的余额展示
	Git                       float64 `protobuf:"fixed64,5,opt,name=git,proto3" json:"git,omitempty"`                                              // giw余额，系统里所有gi2w的余额展示
	RecommendTotal            uint64  `protobuf:"varint,6,opt,name=recommendTotal,proto3" json:"recommendTotal,omitempty"`                         // 邻居数
	RecommendTotalBiw         float64 `protobuf:"fixed64,7,opt,name=recommendTotalBiw,proto3" json:"recommendTotalBiw,omitempty"`                  // 业绩
	RecommendTotalReward      float64 `protobuf:"fixed64,8,opt,name=recommendTotalReward,proto3" json:"recommendTotalReward,omitempty"`            // 邀请收益
	RecommendTotalBiwOne      float64 `protobuf:"fixed64,9,opt,name=recommendTotalBiwOne,proto3" json:"recommendTotalBiwOne,omitempty"`            // L1业绩
	RecommendTotalRewardOne   float64 `protobuf:"fixed64,10,opt,name=recommendTotalRewardOne,proto3" json:"recommendTotalRewardOne,omitempty"`     // 邀请收益
	RecommendTotalBiwTwo      float64 `protobuf:"fixed64,11,opt,name=recommendTotalBiwTwo,proto3" json:"recommendTotalBiwTwo,omitempty"`           // L2业绩
	RecommendTotalRewardTwo   float64 `protobuf:"fixed64,12,opt,name=recommendTotalRewardTwo,proto3" json:"recommendTotalRewardTwo,omitempty"`     // 邀请收益
	RecommendTotalBiwThree    float64 `protobuf:"fixed64,13,opt,name=recommendTotalBiwThree,proto3" json:"recommendTotalBiwThree,omitempty"`       // L3业绩
	RecommendTotalRewardThree float64 `protobuf:"fixed64,14,opt,name=recommendTotalRewardThree,proto3" json:"recommendTotalRewardThree,omitempty"` // 邀请收益
	MyStakeGit                float64 `protobuf:"fixed64,15,opt,name=myStakeGit,proto3" json:"myStakeGit,omitempty"`                               // 粮仓 我的粮仓
	TodayRewardSkateGit       float64 `protobuf:"fixed64,16,opt,name=todayRewardSkateGit,proto3" json:"todayRewardSkateGit,omitempty"`             // 粮仓 今日收益
	RewardStakeRate           float64 `protobuf:"fixed64,17,opt,name=rewardStakeRate,proto3" json:"rewardStakeRate,omitempty"`                     // 粮仓 粮仓系数
	Box                       uint64  `protobuf:"varint,18,opt,name=box,proto3" json:"box,omitempty"`                                              // 盲盒 发行量
	BoxSell                   uint64  `protobuf:"varint,19,opt,name=boxSell,proto3" json:"boxSell,omitempty"`                                      // 盲盒 已卖出
	Start                     string  `protobuf:"bytes,20,opt,name=start,proto3" json:"start,omitempty"`                                           // 盲盒 售卖时间开始
	End                       string  `protobuf:"bytes,21,opt,name=end,proto3" json:"end,omitempty"`                                               // 盲盒 售卖时间结束
	BoxSellAmount             float64 `protobuf:"fixed64,22,opt,name=boxSellAmount,proto3" json:"boxSellAmount,omitempty"`                         // 盲盒 购买所需biw数量
	ExchangeRate              float64 `protobuf:"fixed64,23,opt,name=exchangeRate,proto3" json:"exchangeRate,omitempty"`                           // 兑换 兑换价格
	ExchangeFeeRate           float64 `protobuf:"fixed64,24,opt,name=exchangeFeeRate,proto3" json:"exchangeFeeRate,omitempty"`                     // 兑换 兑换手续费用系数
	StakeGetTotal             float64 `protobuf:"fixed64,25,opt,name=stakeGetTotal,proto3" json:"stakeGetTotal,omitempty"`                         // 果实放大器的 质押总数
	MyStakeGetTotal           float64 `protobuf:"fixed64,26,opt,name=myStakeGetTotal,proto3" json:"myStakeGetTotal,omitempty"`                     // 果实放大器的 我的质押
	StakeGetOverFeeRate       float64 `protobuf:"fixed64,27,opt,name=stakeGetOverFeeRate,proto3" json:"stakeGetOverFeeRate,omitempty"`             // 果实放大器的 赎回手续费用系数
	SellFeeRate               float64 `protobuf:"fixed64,28,opt,name=sellFeeRate,proto3" json:"sellFeeRate,omitempty"`                             // 售卖手续费用系数
	WithdrawMin               uint64  `protobuf:"varint,29,opt,name=withdrawMin,proto3" json:"withdrawMin,omitempty"`                              // 提现最小
	WithdrawMax               uint64  `protobuf:"varint,30,opt,name=withdrawMax,proto3" json:"withdrawMax,omitempty"`                              // 提现最大
}

func (x *UserInfoReply) Reset() {
	*x = UserInfoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoReply) ProtoMessage() {}

func (x *UserInfoReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoReply.ProtoReflect.Descriptor instead.
func (*UserInfoReply) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{5}
}

func (x *UserInfoReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserInfoReply) GetMyAddress() string {
	if x != nil {
		return x.MyAddress
	}
	return ""
}

func (x *UserInfoReply) GetLevel() uint64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *UserInfoReply) GetGiw() float64 {
	if x != nil {
		return x.Giw
	}
	return 0
}

func (x *UserInfoReply) GetGit() float64 {
	if x != nil {
		return x.Git
	}
	return 0
}

func (x *UserInfoReply) GetRecommendTotal() uint64 {
	if x != nil {
		return x.RecommendTotal
	}
	return 0
}

func (x *UserInfoReply) GetRecommendTotalBiw() float64 {
	if x != nil {
		return x.RecommendTotalBiw
	}
	return 0
}

func (x *UserInfoReply) GetRecommendTotalReward() float64 {
	if x != nil {
		return x.RecommendTotalReward
	}
	return 0
}

func (x *UserInfoReply) GetRecommendTotalBiwOne() float64 {
	if x != nil {
		return x.RecommendTotalBiwOne
	}
	return 0
}

func (x *UserInfoReply) GetRecommendTotalRewardOne() float64 {
	if x != nil {
		return x.RecommendTotalRewardOne
	}
	return 0
}

func (x *UserInfoReply) GetRecommendTotalBiwTwo() float64 {
	if x != nil {
		return x.RecommendTotalBiwTwo
	}
	return 0
}

func (x *UserInfoReply) GetRecommendTotalRewardTwo() float64 {
	if x != nil {
		return x.RecommendTotalRewardTwo
	}
	return 0
}

func (x *UserInfoReply) GetRecommendTotalBiwThree() float64 {
	if x != nil {
		return x.RecommendTotalBiwThree
	}
	return 0
}

func (x *UserInfoReply) GetRecommendTotalRewardThree() float64 {
	if x != nil {
		return x.RecommendTotalRewardThree
	}
	return 0
}

func (x *UserInfoReply) GetMyStakeGit() float64 {
	if x != nil {
		return x.MyStakeGit
	}
	return 0
}

func (x *UserInfoReply) GetTodayRewardSkateGit() float64 {
	if x != nil {
		return x.TodayRewardSkateGit
	}
	return 0
}

func (x *UserInfoReply) GetRewardStakeRate() float64 {
	if x != nil {
		return x.RewardStakeRate
	}
	return 0
}

func (x *UserInfoReply) GetBox() uint64 {
	if x != nil {
		return x.Box
	}
	return 0
}

func (x *UserInfoReply) GetBoxSell() uint64 {
	if x != nil {
		return x.BoxSell
	}
	return 0
}

func (x *UserInfoReply) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *UserInfoReply) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

func (x *UserInfoReply) GetBoxSellAmount() float64 {
	if x != nil {
		return x.BoxSellAmount
	}
	return 0
}

func (x *UserInfoReply) GetExchangeRate() float64 {
	if x != nil {
		return x.ExchangeRate
	}
	return 0
}

func (x *UserInfoReply) GetExchangeFeeRate() float64 {
	if x != nil {
		return x.ExchangeFeeRate
	}
	return 0
}

func (x *UserInfoReply) GetStakeGetTotal() float64 {
	if x != nil {
		return x.StakeGetTotal
	}
	return 0
}

func (x *UserInfoReply) GetMyStakeGetTotal() float64 {
	if x != nil {
		return x.MyStakeGetTotal
	}
	return 0
}

func (x *UserInfoReply) GetStakeGetOverFeeRate() float64 {
	if x != nil {
		return x.StakeGetOverFeeRate
	}
	return 0
}

func (x *UserInfoReply) GetSellFeeRate() float64 {
	if x != nil {
		return x.SellFeeRate
	}
	return 0
}

func (x *UserInfoReply) GetWithdrawMin() uint64 {
	if x != nil {
		return x.WithdrawMin
	}
	return 0
}

func (x *UserInfoReply) GetWithdrawMax() uint64 {
	if x != nil {
		return x.WithdrawMax
	}
	return 0
}

type UserRecommendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page uint64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"` // 页数
}

func (x *UserRecommendRequest) Reset() {
	*x = UserRecommendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRecommendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRecommendRequest) ProtoMessage() {}

func (x *UserRecommendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRecommendRequest.ProtoReflect.Descriptor instead.
func (*UserRecommendRequest) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{6}
}

func (x *UserRecommendRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type UserRecommendReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string                     `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // 状态为字符串"ok"时接口正常，其他情况忽略，弹出显示该字段文案即可
	Count  uint64                     `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`  // 总个数，每页20个
	List   []*UserRecommendReply_List `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *UserRecommendReply) Reset() {
	*x = UserRecommendReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRecommendReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRecommendReply) ProtoMessage() {}

func (x *UserRecommendReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRecommendReply.ProtoReflect.Descriptor instead.
func (*UserRecommendReply) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{7}
}

func (x *UserRecommendReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserRecommendReply) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *UserRecommendReply) GetList() []*UserRecommendReply_List {
	if x != nil {
		return x.List
	}
	return nil
}

type UserRecommendLRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page uint64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"` // 页数
	Num  uint64 `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`   // 1表示L1,2表示L2,3表示L3
}

func (x *UserRecommendLRequest) Reset() {
	*x = UserRecommendLRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRecommendLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRecommendLRequest) ProtoMessage() {}

func (x *UserRecommendLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRecommendLRequest.ProtoReflect.Descriptor instead.
func (*UserRecommendLRequest) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{8}
}

func (x *UserRecommendLRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *UserRecommendLRequest) GetNum() uint64 {
	if x != nil {
		return x.Num
	}
	return 0
}

type UserRecommendLReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string                      `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // 状态为字符串"ok"时接口正常，其他情况忽略，弹出显示该字段文案即可
	Count  uint64                      `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`  // 总个数，每页20个
	List   []*UserRecommendLReply_List `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *UserRecommendLReply) Reset() {
	*x = UserRecommendLReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRecommendLReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRecommendLReply) ProtoMessage() {}

func (x *UserRecommendLReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRecommendLReply.ProtoReflect.Descriptor instead.
func (*UserRecommendLReply) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{9}
}

func (x *UserRecommendLReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserRecommendLReply) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *UserRecommendLReply) GetList() []*UserRecommendLReply_List {
	if x != nil {
		return x.List
	}
	return nil
}

type UserLandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page uint64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"` // 页数
}

func (x *UserLandRequest) Reset() {
	*x = UserLandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLandRequest) ProtoMessage() {}

func (x *UserLandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLandRequest.ProtoReflect.Descriptor instead.
func (*UserLandRequest) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{10}
}

func (x *UserLandRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type UserLandReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string                `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // 状态为字符串"ok"时接口正常，其他情况忽略，弹出显示该字段文案即可
	Count  uint64                `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`  // 总个数，每页20个
	List   []*UserLandReply_List `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *UserLandReply) Reset() {
	*x = UserLandReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLandReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLandReply) ProtoMessage() {}

func (x *UserLandReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLandReply.ProtoReflect.Descriptor instead.
func (*UserLandReply) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{11}
}

func (x *UserLandReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserLandReply) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *UserLandReply) GetList() []*UserLandReply_List {
	if x != nil {
		return x.List
	}
	return nil
}

type UserStakeRewardListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page uint64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"` // 页数
}

func (x *UserStakeRewardListRequest) Reset() {
	*x = UserStakeRewardListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserStakeRewardListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStakeRewardListRequest) ProtoMessage() {}

func (x *UserStakeRewardListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStakeRewardListRequest.ProtoReflect.Descriptor instead.
func (*UserStakeRewardListRequest) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{12}
}

func (x *UserStakeRewardListRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type UserStakeRewardListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string                           `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // 状态为字符串"ok"时接口正常，其他情况忽略，弹出显示该字段文案即可
	Count  uint64                           `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`  // 总个数，每页20个
	List   []*UserStakeRewardListReply_List `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *UserStakeRewardListReply) Reset() {
	*x = UserStakeRewardListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserStakeRewardListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStakeRewardListReply) ProtoMessage() {}

func (x *UserStakeRewardListReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStakeRewardListReply.ProtoReflect.Descriptor instead.
func (*UserStakeRewardListReply) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{13}
}

func (x *UserStakeRewardListReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserStakeRewardListReply) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *UserStakeRewardListReply) GetList() []*UserStakeRewardListReply_List {
	if x != nil {
		return x.List
	}
	return nil
}

type UserBoxListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page uint64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"` // 页数
}

func (x *UserBoxListRequest) Reset() {
	*x = UserBoxListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBoxListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBoxListRequest) ProtoMessage() {}

func (x *UserBoxListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBoxListRequest.ProtoReflect.Descriptor instead.
func (*UserBoxListRequest) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{14}
}

func (x *UserBoxListRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type UserBoxListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string                   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // 状态为字符串"ok"时接口正常，其他情况忽略，弹出显示该字段文案即可
	Count  uint64                   `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`  // 总个数，每页20个
	List   []*UserBoxListReply_List `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *UserBoxListReply) Reset() {
	*x = UserBoxListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBoxListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBoxListReply) ProtoMessage() {}

func (x *UserBoxListReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBoxListReply.ProtoReflect.Descriptor instead.
func (*UserBoxListReply) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{15}
}

func (x *UserBoxListReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserBoxListReply) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *UserBoxListReply) GetList() []*UserBoxListReply_List {
	if x != nil {
		return x.List
	}
	return nil
}

type UserBackListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page uint64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"` // 页数
}

func (x *UserBackListRequest) Reset() {
	*x = UserBackListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBackListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBackListRequest) ProtoMessage() {}

func (x *UserBackListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBackListRequest.ProtoReflect.Descriptor instead.
func (*UserBackListRequest) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{16}
}

func (x *UserBackListRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type UserBackListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string                    `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // 状态为字符串"ok"时接口正常，其他情况忽略，弹出显示该字段文案即可
	Count  uint64                    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`  // 总个数，每页1000个
	List   []*UserBackListReply_List `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *UserBackListReply) Reset() {
	*x = UserBackListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBackListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBackListReply) ProtoMessage() {}

func (x *UserBackListReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBackListReply.ProtoReflect.Descriptor instead.
func (*UserBackListReply) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{17}
}

func (x *UserBackListReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserBackListReply) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *UserBackListReply) GetList() []*UserBackListReply_List {
	if x != nil {
		return x.List
	}
	return nil
}

type UserMarketSeedListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page uint64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"` // 页数
}

func (x *UserMarketSeedListRequest) Reset() {
	*x = UserMarketSeedListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMarketSeedListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMarketSeedListRequest) ProtoMessage() {}

func (x *UserMarketSeedListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMarketSeedListRequest.ProtoReflect.Descriptor instead.
func (*UserMarketSeedListRequest) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{18}
}

func (x *UserMarketSeedListRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type UserMarketSeedListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string                          `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // 状态为字符串"ok"时接口正常，其他情况忽略，弹出显示该字段文案即可
	Count  uint64                          `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`  // 总个数，每页1000个
	List   []*UserMarketSeedListReply_List `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *UserMarketSeedListReply) Reset() {
	*x = UserMarketSeedListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMarketSeedListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMarketSeedListReply) ProtoMessage() {}

func (x *UserMarketSeedListReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMarketSeedListReply.ProtoReflect.Descriptor instead.
func (*UserMarketSeedListReply) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{19}
}

func (x *UserMarketSeedListReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserMarketSeedListReply) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *UserMarketSeedListReply) GetList() []*UserMarketSeedListReply_List {
	if x != nil {
		return x.List
	}
	return nil
}

type UserMarketLandListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page uint64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"` // 页数
}

func (x *UserMarketLandListRequest) Reset() {
	*x = UserMarketLandListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMarketLandListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMarketLandListRequest) ProtoMessage() {}

func (x *UserMarketLandListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMarketLandListRequest.ProtoReflect.Descriptor instead.
func (*UserMarketLandListRequest) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{20}
}

func (x *UserMarketLandListRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type UserMarketLandListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string                          `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // 状态为字符串"ok"时接口正常，其他情况忽略，弹出显示该字段文案即可
	Count  uint64                          `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`  // 总个数，每页1000个
	List   []*UserMarketLandListReply_List `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *UserMarketLandListReply) Reset() {
	*x = UserMarketLandListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMarketLandListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMarketLandListReply) ProtoMessage() {}

func (x *UserMarketLandListReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMarketLandListReply.ProtoReflect.Descriptor instead.
func (*UserMarketLandListReply) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{21}
}

func (x *UserMarketLandListReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserMarketLandListReply) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *UserMarketLandListReply) GetList() []*UserMarketLandListReply_List {
	if x != nil {
		return x.List
	}
	return nil
}

type UserMarketPropListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page uint64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"` // 页数
}

func (x *UserMarketPropListRequest) Reset() {
	*x = UserMarketPropListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMarketPropListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMarketPropListRequest) ProtoMessage() {}

func (x *UserMarketPropListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMarketPropListRequest.ProtoReflect.Descriptor instead.
func (*UserMarketPropListRequest) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{22}
}

func (x *UserMarketPropListRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type UserMarketPropListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string                          `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // 状态为字符串"ok"时接口正常，其他情况忽略，弹出显示该字段文案即可
	Count  uint64                          `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`  // 总个数，每页1000个
	List   []*UserMarketPropListReply_List `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *UserMarketPropListReply) Reset() {
	*x = UserMarketPropListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMarketPropListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMarketPropListReply) ProtoMessage() {}

func (x *UserMarketPropListReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMarketPropListReply.ProtoReflect.Descriptor instead.
func (*UserMarketPropListReply) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{23}
}

func (x *UserMarketPropListReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserMarketPropListReply) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *UserMarketPropListReply) GetList() []*UserMarketPropListReply_List {
	if x != nil {
		return x.List
	}
	return nil
}

type UserMarketRentLandListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page uint64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"` // 页数
}

func (x *UserMarketRentLandListRequest) Reset() {
	*x = UserMarketRentLandListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMarketRentLandListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMarketRentLandListRequest) ProtoMessage() {}

func (x *UserMarketRentLandListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMarketRentLandListRequest.ProtoReflect.Descriptor instead.
func (*UserMarketRentLandListRequest) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{24}
}

func (x *UserMarketRentLandListRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type UserMarketRentLandListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string                              `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // 状态为字符串"ok"时接口正常，其他情况忽略，弹出显示该字段文案即可
	Count  uint64                              `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`  // 总个数，每页1000个
	List   []*UserMarketRentLandListReply_List `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *UserMarketRentLandListReply) Reset() {
	*x = UserMarketRentLandListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMarketRentLandListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMarketRentLandListReply) ProtoMessage() {}

func (x *UserMarketRentLandListReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMarketRentLandListReply.ProtoReflect.Descriptor instead.
func (*UserMarketRentLandListReply) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{25}
}

func (x *UserMarketRentLandListReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserMarketRentLandListReply) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *UserMarketRentLandListReply) GetList() []*UserMarketRentLandListReply_List {
	if x != nil {
		return x.List
	}
	return nil
}

type UserMyMarketListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page uint64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"` // 页数
}

func (x *UserMyMarketListRequest) Reset() {
	*x = UserMyMarketListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMyMarketListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMyMarketListRequest) ProtoMessage() {}

func (x *UserMyMarketListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMyMarketListRequest.ProtoReflect.Descriptor instead.
func (*UserMyMarketListRequest) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{26}
}

func (x *UserMyMarketListRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type UserMyMarketListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string                        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // 状态为字符串"ok"时接口正常，其他情况忽略，弹出显示该字段文案即可
	Count  uint64                        `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`  // 总个数，每页1000个
	List   []*UserMyMarketListReply_List `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *UserMyMarketListReply) Reset() {
	*x = UserMyMarketListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMyMarketListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMyMarketListReply) ProtoMessage() {}

func (x *UserMyMarketListReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMyMarketListReply.ProtoReflect.Descriptor instead.
func (*UserMyMarketListReply) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{27}
}

func (x *UserMyMarketListReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserMyMarketListReply) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *UserMyMarketListReply) GetList() []*UserMyMarketListReply_List {
	if x != nil {
		return x.List
	}
	return nil
}

type UserNoticeListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page uint64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"` // 页数
}

func (x *UserNoticeListRequest) Reset() {
	*x = UserNoticeListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserNoticeListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserNoticeListRequest) ProtoMessage() {}

func (x *UserNoticeListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserNoticeListRequest.ProtoReflect.Descriptor instead.
func (*UserNoticeListRequest) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{28}
}

func (x *UserNoticeListRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type UserNoticeListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string                      `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // 状态为字符串"ok"时接口正常，其他情况忽略，弹出显示该字段文案即可
	Count  uint64                      `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`  // 总个数，每页20个
	List   []*UserNoticeListReply_List `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *UserNoticeListReply) Reset() {
	*x = UserNoticeListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserNoticeListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserNoticeListReply) ProtoMessage() {}

func (x *UserNoticeListReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserNoticeListReply.ProtoReflect.Descriptor instead.
func (*UserNoticeListReply) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{29}
}

func (x *UserNoticeListReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserNoticeListReply) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *UserNoticeListReply) GetList() []*UserNoticeListReply_List {
	if x != nil {
		return x.List
	}
	return nil
}

type UserSkateRewardListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page uint64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"` // 页数
}

func (x *UserSkateRewardListRequest) Reset() {
	*x = UserSkateRewardListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSkateRewardListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSkateRewardListRequest) ProtoMessage() {}

func (x *UserSkateRewardListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSkateRewardListRequest.ProtoReflect.Descriptor instead.
func (*UserSkateRewardListRequest) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{30}
}

func (x *UserSkateRewardListRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type UserSkateRewardListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string                           `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // 状态为字符串"ok"时接口正常，其他情况忽略，弹出显示该字段文案即可
	Count  uint64                           `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`  // 总个数，每页20个
	List   []*UserSkateRewardListReply_List `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *UserSkateRewardListReply) Reset() {
	*x = UserSkateRewardListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSkateRewardListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSkateRewardListReply) ProtoMessage() {}

func (x *UserSkateRewardListReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSkateRewardListReply.ProtoReflect.Descriptor instead.
func (*UserSkateRewardListReply) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{31}
}

func (x *UserSkateRewardListReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserSkateRewardListReply) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *UserSkateRewardListReply) GetList() []*UserSkateRewardListReply_List {
	if x != nil {
		return x.List
	}
	return nil
}

type EthAuthorizeRequest_SendBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Code    string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Sign    string `protobuf:"bytes,4,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *EthAuthorizeRequest_SendBody) Reset() {
	*x = EthAuthorizeRequest_SendBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EthAuthorizeRequest_SendBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EthAuthorizeRequest_SendBody) ProtoMessage() {}

func (x *EthAuthorizeRequest_SendBody) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EthAuthorizeRequest_SendBody.ProtoReflect.Descriptor instead.
func (*EthAuthorizeRequest_SendBody) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{2, 0}
}

func (x *EthAuthorizeRequest_SendBody) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *EthAuthorizeRequest_SendBody) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *EthAuthorizeRequest_SendBody) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

type UserRecommendReply_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address   string  `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`     // 地址
	Level     float64 `protobuf:"fixed64,2,opt,name=level,proto3" json:"level,omitempty"`       // 等级
	CreatedAt string  `protobuf:"bytes,3,opt,name=createdAt,proto3" json:"createdAt,omitempty"` // 时间
}

func (x *UserRecommendReply_List) Reset() {
	*x = UserRecommendReply_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRecommendReply_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRecommendReply_List) ProtoMessage() {}

func (x *UserRecommendReply_List) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRecommendReply_List.ProtoReflect.Descriptor instead.
func (*UserRecommendReply_List) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{7, 0}
}

func (x *UserRecommendReply_List) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UserRecommendReply_List) GetLevel() float64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *UserRecommendReply_List) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type UserRecommendLReply_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address   string  `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`     // 地址
	Amount    float64 `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`     // 奖励GIT
	CreatedAt string  `protobuf:"bytes,3,opt,name=createdAt,proto3" json:"createdAt,omitempty"` // 奖励时间
}

func (x *UserRecommendLReply_List) Reset() {
	*x = UserRecommendLReply_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRecommendLReply_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRecommendLReply_List) ProtoMessage() {}

func (x *UserRecommendLReply_List) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRecommendLReply_List.ProtoReflect.Descriptor instead.
func (*UserRecommendLReply_List) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{9, 0}
}

func (x *UserRecommendLReply_List) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UserRecommendLReply_List) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *UserRecommendLReply_List) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type UserLandReply_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                // id 操作时需要使用的参数，显示时#000001，一共6个整数位
	Level     uint64  `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`          // 等级 对应的内容：对应文档土地颜色那列从上到下，对应图片资源
	Health    uint64  `protobuf:"varint,3,opt,name=health,proto3" json:"health,omitempty"`        // 肥沃度
	Status    uint64  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`        // 状态：默认1, 出租中3，出售中4，拍卖中5，左上角显示对应的英文文案，在资源里找对应的图
	OutRate   float64 `protobuf:"fixed64,5,opt,name=outRate,proto3" json:"outRate,omitempty"`     // 增产率
	PerHealth float64 `protobuf:"fixed64,6,opt,name=perHealth,proto3" json:"perHealth,omitempty"` // 种植消耗
}

func (x *UserLandReply_List) Reset() {
	*x = UserLandReply_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLandReply_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLandReply_List) ProtoMessage() {}

func (x *UserLandReply_List) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLandReply_List.ProtoReflect.Descriptor instead.
func (*UserLandReply_List) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{11, 0}
}

func (x *UserLandReply_List) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserLandReply_List) GetLevel() uint64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *UserLandReply_List) GetHealth() uint64 {
	if x != nil {
		return x.Health
	}
	return 0
}

func (x *UserLandReply_List) GetStatus() uint64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UserLandReply_List) GetOutRate() float64 {
	if x != nil {
		return x.OutRate
	}
	return 0
}

func (x *UserLandReply_List) GetPerHealth() float64 {
	if x != nil {
		return x.PerHealth
	}
	return 0
}

type UserStakeRewardListReply_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount    float64 `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`     // 收益
	CreatedAt string  `protobuf:"bytes,3,opt,name=createdAt,proto3" json:"createdAt,omitempty"` // 日期
}

func (x *UserStakeRewardListReply_List) Reset() {
	*x = UserStakeRewardListReply_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserStakeRewardListReply_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserStakeRewardListReply_List) ProtoMessage() {}

func (x *UserStakeRewardListReply_List) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserStakeRewardListReply_List.ProtoReflect.Descriptor instead.
func (*UserStakeRewardListReply_List) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{13, 0}
}

func (x *UserStakeRewardListReply_List) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *UserStakeRewardListReply_List) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type UserBoxListReply_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content   string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`     // 内容 开盲盒获得文案后边的内容
	CreatedAt string `protobuf:"bytes,3,opt,name=createdAt,proto3" json:"createdAt,omitempty"` // 日期
}

func (x *UserBoxListReply_List) Reset() {
	*x = UserBoxListReply_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBoxListReply_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBoxListReply_List) ProtoMessage() {}

func (x *UserBoxListReply_List) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBoxListReply_List.ProtoReflect.Descriptor instead.
func (*UserBoxListReply_List) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{15, 0}
}

func (x *UserBoxListReply_List) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UserBoxListReply_List) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type UserBackListReply_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`          // id 操作时需要使用的参数，显示时#000001，一共6个整数位
	Type   uint64  `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`      // 1种子，2道具
	Num    uint64  `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`        // 对应的内容：对应文档种子和道具那列从上到下，1-14，15铲子，16盲盒
	UseNum uint64  `protobuf:"varint,3,opt,name=useNum,proto3" json:"useNum,omitempty"`  // 剩余使用次数
	Status uint64  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`  // 状态：默认1，2，出售中4，左上角显示对应的英文文案，在资源里找对应的图
	OutMax float64 `protobuf:"fixed64,6,opt,name=outMax,proto3" json:"outMax,omitempty"` // 如果是种子，需要展示的产出数量
}

func (x *UserBackListReply_List) Reset() {
	*x = UserBackListReply_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBackListReply_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBackListReply_List) ProtoMessage() {}

func (x *UserBackListReply_List) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBackListReply_List.ProtoReflect.Descriptor instead.
func (*UserBackListReply_List) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{17, 0}
}

func (x *UserBackListReply_List) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserBackListReply_List) GetType() uint64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UserBackListReply_List) GetNum() uint64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *UserBackListReply_List) GetUseNum() uint64 {
	if x != nil {
		return x.UseNum
	}
	return 0
}

func (x *UserBackListReply_List) GetStatus() uint64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UserBackListReply_List) GetOutMax() float64 {
	if x != nil {
		return x.OutMax
	}
	return 0
}

type UserMarketSeedListReply_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`          // id 操作时需要使用的参数，显示时#000001，一共6个整数位
	Num    uint64  `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`        // 对应的内容：对应文档种子和道具那列从上到下，1-14，15铲子，16盲盒
	Amount float64 `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"` // 售价
	OutMax float64 `protobuf:"fixed64,4,opt,name=outMax,proto3" json:"outMax,omitempty"` // 最大产出
}

func (x *UserMarketSeedListReply_List) Reset() {
	*x = UserMarketSeedListReply_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMarketSeedListReply_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMarketSeedListReply_List) ProtoMessage() {}

func (x *UserMarketSeedListReply_List) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMarketSeedListReply_List.ProtoReflect.Descriptor instead.
func (*UserMarketSeedListReply_List) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{19, 0}
}

func (x *UserMarketSeedListReply_List) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserMarketSeedListReply_List) GetNum() uint64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *UserMarketSeedListReply_List) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *UserMarketSeedListReply_List) GetOutMax() float64 {
	if x != nil {
		return x.OutMax
	}
	return 0
}

type UserMarketLandListReply_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                // id 操作时需要使用的参数，显示时#000001，一共6个整数位
	Level     float64 `protobuf:"fixed64,2,opt,name=level,proto3" json:"level,omitempty"`         // 等级 对应的内容：对应文档土地颜色那列从上到下，对应图片资源
	MaxHealth float64 `protobuf:"fixed64,4,opt,name=maxHealth,proto3" json:"maxHealth,omitempty"` // 肥沃度
	Amount    float64 `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`       // 售价
}

func (x *UserMarketLandListReply_List) Reset() {
	*x = UserMarketLandListReply_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMarketLandListReply_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMarketLandListReply_List) ProtoMessage() {}

func (x *UserMarketLandListReply_List) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMarketLandListReply_List.ProtoReflect.Descriptor instead.
func (*UserMarketLandListReply_List) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{21, 0}
}

func (x *UserMarketLandListReply_List) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserMarketLandListReply_List) GetLevel() float64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *UserMarketLandListReply_List) GetMaxHealth() float64 {
	if x != nil {
		return x.MaxHealth
	}
	return 0
}

func (x *UserMarketLandListReply_List) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type UserMarketPropListReply_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`          // id 操作时需要使用的参数，显示时#000001，一共6个整数位
	Num    uint64  `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`        // 对应的内容：对应文档种子和道具那列从上到下，1-14，15铲子，16盲盒
	Amount float64 `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"` // 售价
	UseMax float64 `protobuf:"fixed64,4,opt,name=useMax,proto3" json:"useMax,omitempty"` // 可用次数
}

func (x *UserMarketPropListReply_List) Reset() {
	*x = UserMarketPropListReply_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMarketPropListReply_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMarketPropListReply_List) ProtoMessage() {}

func (x *UserMarketPropListReply_List) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMarketPropListReply_List.ProtoReflect.Descriptor instead.
func (*UserMarketPropListReply_List) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{23, 0}
}

func (x *UserMarketPropListReply_List) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserMarketPropListReply_List) GetNum() uint64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *UserMarketPropListReply_List) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *UserMarketPropListReply_List) GetUseMax() float64 {
	if x != nil {
		return x.UseMax
	}
	return 0
}

type UserMarketRentLandListReply_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                  // id 操作时需要使用的参数，显示时#000001，一共6个整数位
	Level      uint64  `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`            // 土地级别
	MaxHealth  float64 `protobuf:"fixed64,3,opt,name=maxHealth,proto3" json:"maxHealth,omitempty"`   // 肥沃度
	RentAmount float64 `protobuf:"fixed64,4,opt,name=rentAmount,proto3" json:"rentAmount,omitempty"` // 出租收益
}

func (x *UserMarketRentLandListReply_List) Reset() {
	*x = UserMarketRentLandListReply_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMarketRentLandListReply_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMarketRentLandListReply_List) ProtoMessage() {}

func (x *UserMarketRentLandListReply_List) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMarketRentLandListReply_List.ProtoReflect.Descriptor instead.
func (*UserMarketRentLandListReply_List) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{25, 0}
}

func (x *UserMarketRentLandListReply_List) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserMarketRentLandListReply_List) GetLevel() uint64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *UserMarketRentLandListReply_List) GetMaxHealth() float64 {
	if x != nil {
		return x.MaxHealth
	}
	return 0
}

func (x *UserMarketRentLandListReply_List) GetRentAmount() float64 {
	if x != nil {
		return x.RentAmount
	}
	return 0
}

type UserMyMarketListReply_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                   // id 操作时需要使用的参数，显示时#000001，一共6个整数位
	Type       uint64  `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`               // 1种子和道具，2土地
	Num        uint64  `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`                 // 如果是种子和道具，对应的内容：对应文档种子和道具那列从上到下，1-14，15铲子，16盲盒
	UseNum     uint64  `protobuf:"varint,3,opt,name=useNum,proto3" json:"useNum,omitempty"`           // 如果是道具，剩余使用次数
	OutMax     float64 `protobuf:"fixed64,6,opt,name=outMax,proto3" json:"outMax,omitempty"`          // 如果是种子，需要展示的产出数量
	Level      uint64  `protobuf:"varint,7,opt,name=level,proto3" json:"level,omitempty"`             // 如果是土地，土地级别
	Status     uint64  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`           // 如果是土地，状态：默认1出租，2出售
	MaxHealth  float64 `protobuf:"fixed64,9,opt,name=maxHealth,proto3" json:"maxHealth,omitempty"`    // 如果是土地， 肥沃度
	Amount     float64 `protobuf:"fixed64,8,opt,name=amount,proto3" json:"amount,omitempty"`          // 售价
	RentAmount float64 `protobuf:"fixed64,10,opt,name=rentAmount,proto3" json:"rentAmount,omitempty"` // 如果是土地，出租收益
}

func (x *UserMyMarketListReply_List) Reset() {
	*x = UserMyMarketListReply_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserMyMarketListReply_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserMyMarketListReply_List) ProtoMessage() {}

func (x *UserMyMarketListReply_List) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserMyMarketListReply_List.ProtoReflect.Descriptor instead.
func (*UserMyMarketListReply_List) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{27, 0}
}

func (x *UserMyMarketListReply_List) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserMyMarketListReply_List) GetType() uint64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *UserMyMarketListReply_List) GetNum() uint64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *UserMyMarketListReply_List) GetUseNum() uint64 {
	if x != nil {
		return x.UseNum
	}
	return 0
}

func (x *UserMyMarketListReply_List) GetOutMax() float64 {
	if x != nil {
		return x.OutMax
	}
	return 0
}

func (x *UserMyMarketListReply_List) GetLevel() uint64 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *UserMyMarketListReply_List) GetStatus() uint64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UserMyMarketListReply_List) GetMaxHealth() float64 {
	if x != nil {
		return x.MaxHealth
	}
	return 0
}

func (x *UserMyMarketListReply_List) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *UserMyMarketListReply_List) GetRentAmount() float64 {
	if x != nil {
		return x.RentAmount
	}
	return 0
}

type UserNoticeListReply_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content   string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`     // 消息内容
	CreatedAt string `protobuf:"bytes,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"` // 时间
}

func (x *UserNoticeListReply_List) Reset() {
	*x = UserNoticeListReply_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserNoticeListReply_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserNoticeListReply_List) ProtoMessage() {}

func (x *UserNoticeListReply_List) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserNoticeListReply_List.ProtoReflect.Descriptor instead.
func (*UserNoticeListReply_List) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{29, 0}
}

func (x *UserNoticeListReply_List) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UserNoticeListReply_List) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type UserSkateRewardListReply_List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"` // 地址
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"` // 消息内容
}

func (x *UserSkateRewardListReply_List) Reset() {
	*x = UserSkateRewardListReply_List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_app_v1_app_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSkateRewardListReply_List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSkateRewardListReply_List) ProtoMessage() {}

func (x *UserSkateRewardListReply_List) ProtoReflect() protoreflect.Message {
	mi := &file_api_app_v1_app_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSkateRewardListReply_List.ProtoReflect.Descriptor instead.
func (*UserSkateRewardListReply_List) Descriptor() ([]byte, []int) {
	return file_api_app_v1_app_proto_rawDescGZIP(), []int{31, 0}
}

func (x *UserSkateRewardListReply_List) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UserSkateRewardListReply_List) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

var File_api_app_v1_app_proto protoreflect.FileDescriptor

var file_api_app_v1_app_proto_rawDesc = []byte{
	0x0a, 0x14, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x4b, 0x0a, 0x0f, 0x54, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x73,
	0x69, 0x67, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x23, 0x0a,
	0x0d, 0x54, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69,
	0x67, 0x6e, 0x22, 0xaa, 0x01, 0x0a, 0x13, 0x45, 0x74, 0x68, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x09, 0x73, 0x65,
	0x6e, 0x64, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x74, 0x68, 0x41, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x42, 0x6f, 0x64,
	0x79, 0x1a, 0x4c, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x67, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x22,
	0x41, 0x0a, 0x11, 0x45, 0x74, 0x68, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x11, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x87, 0x09, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x6d, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6d, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x03, 0x67, 0x69, 0x77, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x03, 0x67, 0x69, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0e, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x2c, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x42, 0x69, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x72, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x69, 0x77, 0x12, 0x32, 0x0a,
	0x14, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x72, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x12, 0x32, 0x0a, 0x14, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x42, 0x69, 0x77, 0x4f, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x14, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42,
	0x69, 0x77, 0x4f, 0x6e, 0x65, 0x12, 0x38, 0x0a, 0x17, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4f, 0x6e, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x17, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4f, 0x6e, 0x65, 0x12,
	0x32, 0x0a, 0x14, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x42, 0x69, 0x77, 0x54, 0x77, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x72,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x69, 0x77,
	0x54, 0x77, 0x6f, 0x12, 0x38, 0x0a, 0x17, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x77, 0x6f, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x17, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x77, 0x6f, 0x12, 0x36, 0x0a,
	0x16, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42,
	0x69, 0x77, 0x54, 0x68, 0x72, 0x65, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x16, 0x72,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x69, 0x77,
	0x54, 0x68, 0x72, 0x65, 0x65, 0x12, 0x3c, 0x0a, 0x19, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x68, 0x72,
	0x65, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x19, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x68,
	0x72, 0x65, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x79, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x47, 0x69,
	0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x6d, 0x79, 0x53, 0x74, 0x61, 0x6b, 0x65,
	0x47, 0x69, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x53, 0x6b, 0x61, 0x74, 0x65, 0x47, 0x69, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x13, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x6b, 0x61,
	0x74, 0x65, 0x47, 0x69, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53,
	0x74, 0x61, 0x6b, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x62, 0x6f, 0x78, 0x18, 0x12, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x62, 0x6f,
	0x78, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6f, 0x78, 0x53, 0x65, 0x6c, 0x6c, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x62, 0x6f, 0x78, 0x53, 0x65, 0x6c, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x65, 0x6e, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x6f, 0x78, 0x53, 0x65, 0x6c, 0x6c, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x62, 0x6f, 0x78, 0x53,
	0x65, 0x6c, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x6b, 0x65,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x19, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d,
	0x73, 0x74, 0x61, 0x6b, 0x65, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x28, 0x0a,
	0x0f, 0x6d, 0x79, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x1a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x6d, 0x79, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x47,
	0x65, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x74, 0x61, 0x6b, 0x65,
	0x47, 0x65, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x1b,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x47, 0x65, 0x74, 0x4f, 0x76,
	0x65, 0x72, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x6c,
	0x6c, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b,
	0x73, 0x65, 0x6c, 0x6c, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x77,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x69, 0x6e, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x69, 0x6e, 0x12, 0x20, 0x0a,
	0x0b, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x61, 0x78, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x61, 0x78, 0x22,
	0x2a, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xd1, 0x01, 0x0a, 0x12,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x37, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x54, 0x0a, 0x04, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x3d, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22, 0xd5,
	0x01, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64,
	0x4c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x56,
	0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x25, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x61,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x88, 0x02,
	0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x61, 0x6e,
	0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x1a, 0x94, 0x01, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x65,
	0x72, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x70,
	0x65, 0x72, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x22, 0x30, 0x0a, 0x1a, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xc5, 0x01, 0x0a, 0x18, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x1a, 0x3c, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0x28, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x42, 0x6f, 0x78, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xb7, 0x01, 0x0a,
	0x10, 0x55, 0x73, 0x65, 0x72, 0x42, 0x6f, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x35, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x6f, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x3e, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x29, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61,
	0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x22, 0x80, 0x02, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x63, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x84, 0x01,
	0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x4e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x75, 0x74, 0x4d, 0x61, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x6f, 0x75,
	0x74, 0x4d, 0x61, 0x78, 0x22, 0x2f, 0x0a, 0x19, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x53, 0x65, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xdf, 0x01, 0x0a, 0x17, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x3c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x58, 0x0a,
	0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x4d, 0x61, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x06, 0x6f, 0x75, 0x74, 0x4d, 0x61, 0x78, 0x22, 0x2f, 0x0a, 0x19, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xe9, 0x01, 0x0a, 0x17, 0x55, 0x73, 0x65,
	0x72, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x1a, 0x62, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1c,
	0x0a, 0x09, 0x6d, 0x61, 0x78, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2f, 0x0a, 0x19, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xdf, 0x01, 0x0a, 0x17, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x3c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x58, 0x0a,
	0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x22, 0x33, 0x0a, 0x1d, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x6e, 0x74, 0x4c, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xf9, 0x01, 0x0a,
	0x1b, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x6e, 0x74, 0x4c,
	0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x6e, 0x74, 0x4c, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x6a, 0x0a, 0x04,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61,
	0x78, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6d,
	0x61, 0x78, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x6e, 0x74,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x72, 0x65,
	0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2d, 0x0a, 0x17, 0x55, 0x73, 0x65, 0x72,
	0x4d, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xf4, 0x02, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72,
	0x4d, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x3a, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x79, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0xf0, 0x01, 0x0a, 0x04,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x4e,
	0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x4d, 0x61, 0x78, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x4d, 0x61, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6d, 0x61, 0x78,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0a, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2b,
	0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xbd, 0x01, 0x0a, 0x13,
	0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x38, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x3e, 0x0a, 0x04, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x30, 0x0a, 0x1a, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x6b, 0x61, 0x74, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xc3, 0x01,
	0x0a, 0x18, 0x55, 0x73, 0x65, 0x72, 0x53, 0x6b, 0x61, 0x74, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x6b, 0x61, 0x74, 0x65, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x1a, 0x3a, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x32, 0xb3, 0x10, 0x0a, 0x03, 0x41, 0x70, 0x70, 0x12, 0x65, 0x0a, 0x08, 0x54,
	0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70,
	0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x69,
	0x67, 0x6e, 0x12, 0x80, 0x01, 0x0a, 0x0c, 0x45, 0x74, 0x68, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x74, 0x68, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x74, 0x68, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x3a, 0x09, 0x73, 0x65, 0x6e,
	0x64, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x70,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x65, 0x74, 0x68, 0x5f, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x65, 0x12, 0x65, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1b, 0x12, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x79, 0x0a, 0x0d,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x12, 0x20, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70,
	0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x12, 0x7e, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x4c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x28, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x12, 0x65, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4c,
	0x61, 0x6e, 0x64, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x12, 0x93,
	0x01, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x12, 0x26, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x72, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x42, 0x6f, 0x78, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x6f, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x6f, 0x78, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x70, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x62, 0x6f, 0x78, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x76, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x63, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x63, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20,
	0x12, 0x1e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x8f, 0x01, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53,
	0x65, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53,
	0x65, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x12, 0x25, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x65, 0x64, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x8f, 0x01, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x4c, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x4c, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x12, 0x25, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x12, 0x8f, 0x01, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x12,
	0x25, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f,
	0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0xa0, 0x01, 0x0a, 0x16, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x6e, 0x74, 0x4c, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x6e, 0x74, 0x4c, 0x61, 0x6e,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x6e, 0x74, 0x4c, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x12, 0x2a, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x6c, 0x61, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x87, 0x01, 0x0a, 0x10, 0x55, 0x73,
	0x65, 0x72, 0x4d, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x4d, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x79, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x12, 0x23,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x6d, 0x79, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x7e, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x22, 0x12, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x93, 0x01, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x53, 0x6b, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x6b, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x6b, 0x61, 0x74, 0x65, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x28, 0x12, 0x26, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x6b, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x22, 0x0a, 0x0a, 0x61, 0x70, 0x69,
	0x2e, 0x61, 0x70, 0x70, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x12, 0x67, 0x61, 0x6d, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_app_v1_app_proto_rawDescOnce sync.Once
	file_api_app_v1_app_proto_rawDescData = file_api_app_v1_app_proto_rawDesc
)

func file_api_app_v1_app_proto_rawDescGZIP() []byte {
	file_api_app_v1_app_proto_rawDescOnce.Do(func() {
		file_api_app_v1_app_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_app_v1_app_proto_rawDescData)
	})
	return file_api_app_v1_app_proto_rawDescData
}

var file_api_app_v1_app_proto_msgTypes = make([]protoimpl.MessageInfo, 46)
var file_api_app_v1_app_proto_goTypes = []interface{}{
	(*TestSignRequest)(nil),                  // 0: api.app.v1.TestSignRequest
	(*TestSignReply)(nil),                    // 1: api.app.v1.TestSignReply
	(*EthAuthorizeRequest)(nil),              // 2: api.app.v1.EthAuthorizeRequest
	(*EthAuthorizeReply)(nil),                // 3: api.app.v1.EthAuthorizeReply
	(*UserInfoRequest)(nil),                  // 4: api.app.v1.UserInfoRequest
	(*UserInfoReply)(nil),                    // 5: api.app.v1.UserInfoReply
	(*UserRecommendRequest)(nil),             // 6: api.app.v1.UserRecommendRequest
	(*UserRecommendReply)(nil),               // 7: api.app.v1.UserRecommendReply
	(*UserRecommendLRequest)(nil),            // 8: api.app.v1.UserRecommendLRequest
	(*UserRecommendLReply)(nil),              // 9: api.app.v1.UserRecommendLReply
	(*UserLandRequest)(nil),                  // 10: api.app.v1.UserLandRequest
	(*UserLandReply)(nil),                    // 11: api.app.v1.UserLandReply
	(*UserStakeRewardListRequest)(nil),       // 12: api.app.v1.UserStakeRewardListRequest
	(*UserStakeRewardListReply)(nil),         // 13: api.app.v1.UserStakeRewardListReply
	(*UserBoxListRequest)(nil),               // 14: api.app.v1.UserBoxListRequest
	(*UserBoxListReply)(nil),                 // 15: api.app.v1.UserBoxListReply
	(*UserBackListRequest)(nil),              // 16: api.app.v1.UserBackListRequest
	(*UserBackListReply)(nil),                // 17: api.app.v1.UserBackListReply
	(*UserMarketSeedListRequest)(nil),        // 18: api.app.v1.UserMarketSeedListRequest
	(*UserMarketSeedListReply)(nil),          // 19: api.app.v1.UserMarketSeedListReply
	(*UserMarketLandListRequest)(nil),        // 20: api.app.v1.UserMarketLandListRequest
	(*UserMarketLandListReply)(nil),          // 21: api.app.v1.UserMarketLandListReply
	(*UserMarketPropListRequest)(nil),        // 22: api.app.v1.UserMarketPropListRequest
	(*UserMarketPropListReply)(nil),          // 23: api.app.v1.UserMarketPropListReply
	(*UserMarketRentLandListRequest)(nil),    // 24: api.app.v1.UserMarketRentLandListRequest
	(*UserMarketRentLandListReply)(nil),      // 25: api.app.v1.UserMarketRentLandListReply
	(*UserMyMarketListRequest)(nil),          // 26: api.app.v1.UserMyMarketListRequest
	(*UserMyMarketListReply)(nil),            // 27: api.app.v1.UserMyMarketListReply
	(*UserNoticeListRequest)(nil),            // 28: api.app.v1.UserNoticeListRequest
	(*UserNoticeListReply)(nil),              // 29: api.app.v1.UserNoticeListReply
	(*UserSkateRewardListRequest)(nil),       // 30: api.app.v1.UserSkateRewardListRequest
	(*UserSkateRewardListReply)(nil),         // 31: api.app.v1.UserSkateRewardListReply
	(*EthAuthorizeRequest_SendBody)(nil),     // 32: api.app.v1.EthAuthorizeRequest.SendBody
	(*UserRecommendReply_List)(nil),          // 33: api.app.v1.UserRecommendReply.List
	(*UserRecommendLReply_List)(nil),         // 34: api.app.v1.UserRecommendLReply.List
	(*UserLandReply_List)(nil),               // 35: api.app.v1.UserLandReply.List
	(*UserStakeRewardListReply_List)(nil),    // 36: api.app.v1.UserStakeRewardListReply.List
	(*UserBoxListReply_List)(nil),            // 37: api.app.v1.UserBoxListReply.List
	(*UserBackListReply_List)(nil),           // 38: api.app.v1.UserBackListReply.List
	(*UserMarketSeedListReply_List)(nil),     // 39: api.app.v1.UserMarketSeedListReply.List
	(*UserMarketLandListReply_List)(nil),     // 40: api.app.v1.UserMarketLandListReply.List
	(*UserMarketPropListReply_List)(nil),     // 41: api.app.v1.UserMarketPropListReply.List
	(*UserMarketRentLandListReply_List)(nil), // 42: api.app.v1.UserMarketRentLandListReply.List
	(*UserMyMarketListReply_List)(nil),       // 43: api.app.v1.UserMyMarketListReply.List
	(*UserNoticeListReply_List)(nil),         // 44: api.app.v1.UserNoticeListReply.List
	(*UserSkateRewardListReply_List)(nil),    // 45: api.app.v1.UserSkateRewardListReply.List
}
var file_api_app_v1_app_proto_depIdxs = []int32{
	32, // 0: api.app.v1.EthAuthorizeRequest.send_body:type_name -> api.app.v1.EthAuthorizeRequest.SendBody
	33, // 1: api.app.v1.UserRecommendReply.list:type_name -> api.app.v1.UserRecommendReply.List
	34, // 2: api.app.v1.UserRecommendLReply.list:type_name -> api.app.v1.UserRecommendLReply.List
	35, // 3: api.app.v1.UserLandReply.list:type_name -> api.app.v1.UserLandReply.List
	36, // 4: api.app.v1.UserStakeRewardListReply.list:type_name -> api.app.v1.UserStakeRewardListReply.List
	37, // 5: api.app.v1.UserBoxListReply.list:type_name -> api.app.v1.UserBoxListReply.List
	38, // 6: api.app.v1.UserBackListReply.list:type_name -> api.app.v1.UserBackListReply.List
	39, // 7: api.app.v1.UserMarketSeedListReply.list:type_name -> api.app.v1.UserMarketSeedListReply.List
	40, // 8: api.app.v1.UserMarketLandListReply.list:type_name -> api.app.v1.UserMarketLandListReply.List
	41, // 9: api.app.v1.UserMarketPropListReply.list:type_name -> api.app.v1.UserMarketPropListReply.List
	42, // 10: api.app.v1.UserMarketRentLandListReply.list:type_name -> api.app.v1.UserMarketRentLandListReply.List
	43, // 11: api.app.v1.UserMyMarketListReply.list:type_name -> api.app.v1.UserMyMarketListReply.List
	44, // 12: api.app.v1.UserNoticeListReply.list:type_name -> api.app.v1.UserNoticeListReply.List
	45, // 13: api.app.v1.UserSkateRewardListReply.list:type_name -> api.app.v1.UserSkateRewardListReply.List
	0,  // 14: api.app.v1.App.TestSign:input_type -> api.app.v1.TestSignRequest
	2,  // 15: api.app.v1.App.EthAuthorize:input_type -> api.app.v1.EthAuthorizeRequest
	4,  // 16: api.app.v1.App.UserInfo:input_type -> api.app.v1.UserInfoRequest
	6,  // 17: api.app.v1.App.UserRecommend:input_type -> api.app.v1.UserRecommendRequest
	8,  // 18: api.app.v1.App.UserRecommendL:input_type -> api.app.v1.UserRecommendLRequest
	10, // 19: api.app.v1.App.UserLand:input_type -> api.app.v1.UserLandRequest
	12, // 20: api.app.v1.App.UserStakeRewardList:input_type -> api.app.v1.UserStakeRewardListRequest
	14, // 21: api.app.v1.App.UserBoxList:input_type -> api.app.v1.UserBoxListRequest
	16, // 22: api.app.v1.App.UserBackList:input_type -> api.app.v1.UserBackListRequest
	18, // 23: api.app.v1.App.UserMarketSeedList:input_type -> api.app.v1.UserMarketSeedListRequest
	20, // 24: api.app.v1.App.UserMarketLandList:input_type -> api.app.v1.UserMarketLandListRequest
	22, // 25: api.app.v1.App.UserMarketPropList:input_type -> api.app.v1.UserMarketPropListRequest
	24, // 26: api.app.v1.App.UserMarketRentLandList:input_type -> api.app.v1.UserMarketRentLandListRequest
	26, // 27: api.app.v1.App.UserMyMarketList:input_type -> api.app.v1.UserMyMarketListRequest
	28, // 28: api.app.v1.App.UserNoticeList:input_type -> api.app.v1.UserNoticeListRequest
	30, // 29: api.app.v1.App.UserSkateRewardList:input_type -> api.app.v1.UserSkateRewardListRequest
	1,  // 30: api.app.v1.App.TestSign:output_type -> api.app.v1.TestSignReply
	3,  // 31: api.app.v1.App.EthAuthorize:output_type -> api.app.v1.EthAuthorizeReply
	5,  // 32: api.app.v1.App.UserInfo:output_type -> api.app.v1.UserInfoReply
	7,  // 33: api.app.v1.App.UserRecommend:output_type -> api.app.v1.UserRecommendReply
	9,  // 34: api.app.v1.App.UserRecommendL:output_type -> api.app.v1.UserRecommendLReply
	11, // 35: api.app.v1.App.UserLand:output_type -> api.app.v1.UserLandReply
	13, // 36: api.app.v1.App.UserStakeRewardList:output_type -> api.app.v1.UserStakeRewardListReply
	15, // 37: api.app.v1.App.UserBoxList:output_type -> api.app.v1.UserBoxListReply
	17, // 38: api.app.v1.App.UserBackList:output_type -> api.app.v1.UserBackListReply
	19, // 39: api.app.v1.App.UserMarketSeedList:output_type -> api.app.v1.UserMarketSeedListReply
	21, // 40: api.app.v1.App.UserMarketLandList:output_type -> api.app.v1.UserMarketLandListReply
	23, // 41: api.app.v1.App.UserMarketPropList:output_type -> api.app.v1.UserMarketPropListReply
	25, // 42: api.app.v1.App.UserMarketRentLandList:output_type -> api.app.v1.UserMarketRentLandListReply
	27, // 43: api.app.v1.App.UserMyMarketList:output_type -> api.app.v1.UserMyMarketListReply
	29, // 44: api.app.v1.App.UserNoticeList:output_type -> api.app.v1.UserNoticeListReply
	31, // 45: api.app.v1.App.UserSkateRewardList:output_type -> api.app.v1.UserSkateRewardListReply
	30, // [30:46] is the sub-list for method output_type
	14, // [14:30] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_api_app_v1_app_proto_init() }
func file_api_app_v1_app_proto_init() {
	if File_api_app_v1_app_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_app_v1_app_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestSignRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestSignReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthAuthorizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthAuthorizeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRecommendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRecommendReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRecommendLRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRecommendLReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLandReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserStakeRewardListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserStakeRewardListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBoxListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBoxListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBackListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBackListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserMarketSeedListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserMarketSeedListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserMarketLandListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserMarketLandListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserMarketPropListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserMarketPropListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserMarketRentLandListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserMarketRentLandListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserMyMarketListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserMyMarketListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserNoticeListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserNoticeListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSkateRewardListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSkateRewardListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EthAuthorizeRequest_SendBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRecommendReply_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRecommendLReply_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLandReply_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserStakeRewardListReply_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBoxListReply_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBackListReply_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserMarketSeedListReply_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserMarketLandListReply_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserMarketPropListReply_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserMarketRentLandListReply_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserMyMarketListReply_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserNoticeListReply_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_app_v1_app_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSkateRewardListReply_List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_app_v1_app_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   46,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_app_v1_app_proto_goTypes,
		DependencyIndexes: file_api_app_v1_app_proto_depIdxs,
		MessageInfos:      file_api_app_v1_app_proto_msgTypes,
	}.Build()
	File_api_app_v1_app_proto = out.File
	file_api_app_v1_app_proto_rawDesc = nil
	file_api_app_v1_app_proto_goTypes = nil
	file_api_app_v1_app_proto_depIdxs = nil
}
